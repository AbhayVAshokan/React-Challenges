{"version":3,"sources":["reportWebVitals.ts","assets/images/react-logo.png","App.tsx","randomuserapi-table/App.tsx","spotlight-search/resources/words.ts","spotlight-search/components/InputField.tsx","spotlight-search/components/Suggestions.tsx","spotlight-search/assets/images/background.jpg","spotlight-search/App.tsx","formik-todo/components/AddTodoBar.tsx","formik-todo/components/TodoItem.tsx","formik-todo/App.tsx","darktheme-toggle/assets/icons/apple.svg","darktheme-toggle/assets/icons/battery.svg","darktheme-toggle/components/Navbar/Navbar.tsx","darktheme-toggle/components/SystemPreferences/Frame/Frame.tsx","darktheme-toggle/components/SystemPreferences/SideBar/SideBar.tsx","darktheme-toggle/components/SystemPreferences/SystemPreferences.tsx","darktheme-toggle/assets/images/loki.jpg","darktheme-toggle/assets/images/batman.jpg","darktheme-toggle/assets/images/interstellar.jpg","darktheme-toggle/App.tsx","randomuserapi-table/components/ExportDropdown.tsx","randomuserapi-table/components/SearchBar.tsx","randomuserapi-table/components/TableItem.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","particleOptions","filter","x","y","image","get","b","color","radius","Math","random","mass","friction","initialPosition","canvasDimensions","Vector","width","height","motionForce","forces","disturbance","Direction","words","sort","InputField","value","onChange","hasResults","className","join","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","autoFocus","placeholder","Suggestions","suggestions","onClick","map","suggestion","index","App","useState","setValue","setSuggestions","style","backgroundImage","BackgroundImage","e","target","length","word","toLowerCase","includes","getSuggestions","choice","AddTodoBar","addTodo","initialValues","title","description","validate","values","onSubmit","resetForm","autoComplete","name","type","component","TodoItem","id","completed","completedTodo","removeTodo","checked","todos","setTodos","toString","substr","todo","getDateAndTime","date","Date","toLocaleTimeString","hour","minute","day","month","weekday","Navbar","src","AppleLogo","alt","item","BatteryIcon","Frame","children","SideBar","SystemPreferences","wallpaper","wallpapers","onWallpaperChange","Loki","Batman","Interstellar","setWallpaper","ExportDropdown","exportData","showDropdown","setShowDropdown","show","data","SearchBar","TableItem","gender","dob","email","picture","selected","toLocaleDateString","year","users","setUsers","DOWN","HIDDEN","sortConfig","setSortConfig","filterUsers","search","user1","user2","sortUsers","user","JSON","stringify","Object","useEffect","axios","res","results","first","last","thumbnail","allData","some","getExportData","header","headerKey","direction","UP","config","getTableHeaderItem","_user","ReactDOM","render","StrictMode","exact","path","useWindowSize","innerWidth","innerHeight","ReactLogo","Number","scale","entropy","maxParticles","mouseMoveForce","touchMoveForce","backgroundColor","to","SpotlightSearch","FormikTodo","DarkThemeToggle","RandomUserTable","document","getElementById"],"mappings":"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","file":"static/js/main.df9ae586.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/react-logo.07cb26b0.png\";","import * as React from \"react\";\nimport useWindowSize from \"@rooks/use-window-size\";\nimport ParticleImage, {\n  ParticleOptions,\n  Vector,\n  forces,\n  ParticleForce,\n} from \"react-particle-image\";\n\nimport ReactLogo from \"./assets/images/react-logo.png\";\nimport { Link } from \"react-router-dom\";\n\nconst particleOptions: ParticleOptions = {\n  filter: ({ x, y, image }) => {\n    // Get pixel\n    const pixel = image.get(x, y);\n    // Make a particle for this pixel if blue > 50 (range 0-255)\n    return pixel.b > 50;\n  },\n  color: ({ x, y, image }) => \"#61dafb\",\n  radius: () => Math.random() * 1.5 + 0.5,\n  mass: () => 40,\n  friction: () => 0.15,\n  initialPosition: ({ canvasDimensions }) => {\n    return new Vector(canvasDimensions.width / 2, canvasDimensions.height / 2);\n  },\n};\n\nconst motionForce = (x: number, y: number): ParticleForce => {\n  return forces.disturbance(x, y, 50);\n};\n\nexport default function App() {\n  const { innerWidth, innerHeight } = useWindowSize();\n\n  return (\n    <div className=\"relative h-screen w-screen\">\n      <ParticleImage\n        className=\"absolute z-10\"\n        src={ReactLogo}\n        width={Number(innerWidth)}\n        height={Number(innerHeight)}\n        scale={0.6}\n        entropy={15}\n        maxParticles={5000}\n        particleOptions={particleOptions}\n        mouseMoveForce={motionForce}\n        touchMoveForce={motionForce}\n        backgroundColor=\"#191D1F\"\n      />\n      <h1 className=\"absolute top-20 text-white z-20 text-4xl sm:text-5xl md:text-6xl font-bold w-screen text-center cursor-default opacity-50 hover:opacity-100 transition duration-500 uppercase\">\n        React Challenges\n      </h1>\n      <div className=\"absolute z-20 flex flex-wrap bottom-20 text-white justify-between items-center w-full px-10\">\n        <Link className=\"navigator\" to=\"/React-Challenges/spotlight-search\">\n          Spotlight Search\n        </Link>\n        <Link className=\"navigator\" to=\"/React-Challenges/formik-todo\">\n          Formik Todo\n        </Link>\n        <Link className=\"navigator\" to=\"/React-Challenges/darktheme-toggle\">\n          Dark Theme Toggle\n        </Link>\n        <Link className=\"navigator\" to=\"/React-Challenges/randomuserapi-table\">\n          Random User API Table\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport TableItem from \"./components/TableItem\";\n\n// Interface for API response\ninterface APIResponse {\n  name: {\n    title: string;\n    first: string;\n    last: string;\n  };\n  gender: string;\n  dob: {\n    date: string;\n  };\n  email: string;\n  picture: {\n    thumbnail: string;\n  };\n}\n\n// Interface for table data\ninterface User {\n  name: string;\n  gender: string;\n  dob: string;\n  email: string;\n  picture: string;\n  selected: boolean;\n}\n\n// Interface for sortConfig\ninterface SortConfig {\n  name: Direction;\n  gender: Direction;\n  dob: Direction;\n  email: Direction;\n}\n\n// Direction of arrow inside table header element\nenum Direction {\n  UP,\n  DOWN,\n  HIDDEN,\n}\n\n// Sort users according to the selected sort config\n// @ts-ignore\nconst sortUsers: Array<User> = (users: Array<User>, sortConfig: SortConfig) => {\n  // Sort by name\n  if (sortConfig.name !== Direction.HIDDEN)\n    return users.sort((user1: User, user2: User) => {\n      return sortConfig.name === Direction.DOWN\n        ? user1.name < user2.name\n          ? -1\n          : 1\n        : user1.name > user2.name\n        ? -1\n        : 1;\n    });\n  // Sort by gender\n  if (sortConfig.gender !== Direction.HIDDEN)\n    return users.sort((user1: User, user2: User) => {\n      return sortConfig.gender === Direction.DOWN\n        ? user1.gender < user2.gender\n          ? -1\n          : 1\n        : user1.gender > user2.gender\n        ? -1\n        : 1;\n    });\n  // Sort by email\n  if (sortConfig.email !== Direction.HIDDEN)\n    return users.sort((user1: User, user2: User) => {\n      return sortConfig.email === Direction.DOWN\n        ? user1.email < user2.email\n          ? -1\n          : 1\n        : user1.email > user2.email\n        ? -1\n        : 1;\n    });\n  // Sort by dob\n  if (sortConfig.dob !== Direction.HIDDEN)\n    return users.sort((user1: User, user2: User) => {\n      return sortConfig.dob === Direction.DOWN\n        ? new Date(user1.dob) < new Date(user2.dob)\n          ? -1\n          : 1\n        : new Date(user1.dob) > new Date(user2.dob)\n        ? -1\n        : 1;\n    });\n};\n\nconst App: React.FC<{}> = () => {\n  // List of all users fetched by API\n  const [users, setUsers] = useState<Array<User>>([]);\n\n  // Table header items\n  const headers = [\"Name\", \"Gender\", \"DOB\", \"Email\"];\n\n  // Search item value\n  const [value, setValue] = useState<string>(\"\");\n\n  // Function to perform filtering operation on search\n  const onSearchItemChange:\n    | React.ChangeEventHandler<HTMLInputElement>\n    | undefined = (e) => {\n    setValue(e.target.value);\n  };\n\n  // Config to sort table items\n  const [sortConfig, setSortConfig] = useState<SortConfig>({\n    name: Direction.DOWN,\n    gender: Direction.HIDDEN,\n    dob: Direction.HIDDEN,\n    email: Direction.HIDDEN,\n  });\n\n  // Function to return all users filtered by the entered value\n  const filterUsers = (search: string) => {\n    // @ts-ignore\n    return sortUsers(\n      users.filter((user) =>\n        JSON.stringify(Object.values(user))\n          .toLowerCase()\n          .includes(search.toLowerCase())\n      ),\n      sortConfig\n    );\n  };\n\n  // Function to get export data\n  const getExportData = (value: string) => {\n    const allData = filterUsers(value);\n    if (allData.some((user: User) => user.selected))\n      return allData\n        .filter((user: User) => user.selected === true)\n        .map((user: User) => ({\n          name: user.name,\n          gender: user.gender,\n          dob: new Date(user.dob).toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n          }),\n          email: user.email,\n        }));\n    else\n      return allData.map((user: User) => ({\n        name: user.name,\n        gender: user.gender,\n        dob: new Date(user.dob).toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        }),\n        email: user.email,\n      }));\n  };\n\n  // Populating users on first render\n  useEffect(() => {\n    axios.get(\"https://randomuser.me/api?results=500\").then((res) => {\n      setUsers(\n        res.data.results.map((item: APIResponse) => ({\n          name: `${item.name.title}. ${item.name.first} ${item.name.last}`,\n          gender: item.gender,\n          dob: item.dob.date,\n          email: item.email,\n          picture: item.picture.thumbnail,\n          selected: false,\n        }))\n      );\n    });\n  }, []);\n\n  // Return table header item\n  const getTableHeaderItem = (title: string) => {\n    // Key for sortConfig\n    const headerKey = `${title.toLowerCase()}`;\n\n    // @ts-ignore\n    let direction = sortConfig[headerKey];\n\n    const onClick = () => {\n      if (direction === Direction.HIDDEN) direction = Direction.DOWN;\n      else\n        direction = direction === Direction.UP ? Direction.DOWN : Direction.UP;\n\n      const config = {\n        name: Direction.HIDDEN,\n        gender: Direction.HIDDEN,\n        dob: Direction.HIDDEN,\n        email: Direction.HIDDEN,\n      };\n\n      if (headerKey === \"name\") config.name = direction;\n      else if (headerKey === \"email\") config.email = direction;\n      else if (headerKey === \"dob\") config.dob = direction;\n      else config.gender = direction;\n\n      setSortConfig({\n        ...config,\n      });\n    };\n\n    return (\n      <th key={title} onClick={onClick}>\n        <div className=\"flex items-center cursor-pointer py-3 px-10\">\n          <p\n            className={[\n              \"font-bold\",\n              \"transform\",\n              \"duration-200\",\n              \"hover:scale-125\",\n              \"hover:text-black\",\n              direction !== Direction.HIDDEN ? \"text-black\" : \"text-gray-500\",\n            ].join(\" \")}\n          >\n            {title}\n          </p>\n          {direction === Direction.UP ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-5 w-5\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M7 11l5-5m0 0l5 5m-5-5v12\"\n              />\n            </svg>\n          ) : direction === Direction.DOWN ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-5 w-5\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M17 13l-5 5m0 0l-5-5m5 5V6\"\n              />\n            </svg>\n          ) : (\n            <div />\n          )}{\" \"}\n        </div>\n      </th>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center mx-20\">\n      <SearchBar\n        onChange={onSearchItemChange}\n        value={value}\n        exportData={getExportData(value)}\n      />\n      <table>\n        <thead className=\"bg-gray-300 mb-5 rounded-full sticky top-20 z-10\">\n          {headers.map((header) => getTableHeaderItem(header))}\n        </thead>\n        <tbody>\n          {filterUsers(value).map((user: User) => (\n            <TableItem\n              key={`${user.name}__${Math.random().toString().substr(2)}`}\n              name={user.name}\n              gender={user.gender}\n              email={user.email}\n              dob={new Date(user.dob)}\n              picture={user.picture}\n              selected={user.selected}\n              onClick={() =>\n                setUsers((users) =>\n                  users.map((_user) => {\n                    if (user.name === _user.name)\n                      return { ..._user, selected: !_user.selected };\n                    else return _user;\n                  })\n                )\n              }\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default App;\n","// List of random words related to Apple spotlight\nconst words: Array<string> = [\n  \"App Store\",\n  \"Keychain Access\",\n  \"Activity Monitor\",\n  \"Automator\",\n  \"Audio MIDI setup\",\n  \"Apple Inc.\",\n  \"Bluetooth File Exchange\",\n  \"Battery\",\n  \"Google Chrome\",\n  \"Chess\",\n  \"Docker\",\n  \"Dock and Menu\",\n  \"Displays\",\n  \"Dictionary\",\n  \"Disk Utility\",\n  \"Desktop and Screensaver\",\n  \"Date & Time\",\n  \"Finder\",\n  \"Font Book\",\n  \"FaceTime\",\n  \"Family Sharing\",\n  \"Google Chrome\",\n  \"Grapher\",\n  \"Home\",\n  \"Help Viewer\",\n  \"iTerm\",\n  \"Image Capture\",\n  \"iMovie\",\n  \"Keynote\",\n  \"Keyboard\",\n  \"Launchpad\",\n  \"Mail\",\n  \"Messages\",\n  \"Storage Management\",\n  \"Maps\",\n  \"Notes\",\n  \"Numbers\",\n  \"Network Utility\",\n  \"Networks\",\n  \"iOS App Installer\",\n  \"Preview\",\n  \"Photos\",\n  \"Photo Booth\",\n  \"QuickTime Player\",\n  \"Reminders\",\n  \"Recents\",\n  \"System Preferences\",\n  \"Safari\",\n  \"Slack\",\n  \"Siri\",\n];\n\nexport default words.sort();\n","interface Props {\n  value: string;\n  hasResults: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\n\nconst InputField: React.FC<Props> = ({ value, onChange, hasResults }) => {\n  return (\n    <div\n      className={[\n        \"flex\",\n        \"absolute\",\n        \"bg-gray-800\",\n        \"opacity-75\",\n        \"pl-2\",\n        \"pr-2\",\n        \"pt-1\",\n        \"pb-1\",\n        \"md:top-52\",\n        \"top-20\",\n        \"md:w-96\",\n        \"w-full\",\n        \"lg:w-2/5\",\n        \"backdrop-filter\",\n        \"backdrop-blur-sm\",\n        \"shadow-2xl\",\n        hasResults ? \"rounded-t-xl\" : \"rounded-xl\",\n      ].join(\" \")}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"h-8 w-8 mt-auto mb-auto ml-2 mr-2\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"white\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth=\"1\"\n          d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n        />\n      </svg>\n      <input\n        value={value}\n        autoFocus\n        onChange={onChange}\n        placeholder=\"Spotlight Search\"\n        className=\"top-5 bg-gray-800 backdrop-filter backdrop-blur-sm opacity-75 text-4xl font-light text-white outline-none md:w-96 w-full lg:w-full\"\n      />\n    </div>\n  );\n};\n\nexport default InputField;\n","interface Props {\n  suggestions: Array<string>;\n  onClick: (choice: string) => void;\n}\n\nconst Suggestions: React.FC<Props> = ({ suggestions, onClick }) => {\n  return (\n    <ul className=\"md:w-96 w-full lg:w-2/5 p-3 rounded-b-2xl bg-opacity-75 bg-gray-800 max-h-96 overflow-scroll backdrop-filter backdrop-blur-sm shadow-2xl absolute md:top-64 top-32\">\n      {suggestions.map((suggestion, index) => (\n        <li\n          key={index}\n          onClick={() => {\n            onClick(suggestion);\n          }}\n          className=\"text-white hover:bg-blue-500 cursor-pointer mt-1 rounded-sm pl-2 pr-2\"\n        >\n          {suggestion}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Suggestions;\n","export default __webpack_public_path__ + \"static/media/background.7b57e1c7.jpg\";","import { useState } from \"react\";\n\nimport words from \"./resources/words\";\nimport InputField from \"./components/InputField\";\nimport Suggestions from \"./components/Suggestions\";\n\nimport BackgroundImage from \"./assets/images/background.jpg\";\n\nconst App: React.FC<{}> = () => {\n  // Input value\n  const [value, setValue] = useState<string>(\"\");\n\n  // Suggestions\n  const [suggestions, setSuggestions] = useState<Array<string>>([]);\n\n  // Function to filter the suggestions according to the current input value\n  const getSuggestions = (value: string) => {\n    if (value.length === 0) setSuggestions([]);\n    else\n      setSuggestions(\n        words.filter((word) => word.toLowerCase().includes(value.toLowerCase()))\n      );\n  };\n\n  // Function to perform onChange event in input\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n    getSuggestions(e.target.value);\n  };\n\n  // Function to perform onClick function on individual suggestions\n  const onSuggestionClick = (choice: string) => {\n    setValue(choice);\n    setSuggestions([]);\n  };\n\n  return (\n    <div\n      className=\"h-screen bg-background bg-no-repeat flex flex-col items-center relative\"\n      style={{ backgroundImage: `url(${BackgroundImage})` }}\n    >\n      <InputField\n        value={value}\n        onChange={onInputChange}\n        hasResults={suggestions.length > 0}\n      />\n      {suggestions.length > 0 && (\n        <Suggestions suggestions={suggestions} onClick={onSuggestionClick} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\n\ninterface Props {\n  addTodo: (title: string, description: string) => void;\n}\n\ninterface FormInterface {\n  title: string;\n  description: string;\n}\n\nconst AddTodoBar: React.FC<Props> = ({ addTodo }) => {\n  // Initial values of the form\n  const initialValues = {\n    title: \"\",\n    description: \"\",\n  };\n\n  // Form validation\n  const validate = (values: FormInterface) => {\n    if (!values.title) return { title: \"Title is required\" };\n  };\n\n  // Form submission\n  const onSubmit = (\n    values: FormInterface,\n    { resetForm }: { resetForm: () => void }\n  ) => {\n    addTodo(values.title, values.description);\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={validate}\n      onSubmit={onSubmit}\n      className=\"sticky top-20 shadow-lg\"\n    >\n      <Form autoComplete=\"off\">\n        <div className=\"flex my-1\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mt-1 mr-2\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#BDBDBD\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n            />\n          </svg>\n          <div className=\"w-full\">\n            <Field\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"What do you need to remember?\"\n              className=\"w-full font-semibold outline-none text-xl px-2 rounded-lg\"\n            />\n            <ErrorMessage\n              name=\"title\"\n              component=\"div\"\n              className=\"text-xs text-red-500 px-2 font-semibold\"\n            />\n          </div>\n        </div>\n\n        <div className=\"relative\">\n          <Field\n            name=\"description\"\n            type=\"textarea\"\n            placeholder=\"Enter your description\"\n            className=\"bg-yellow-50 rounded-2xl p-2 w-full h-20 outline-none text-sm text-gray-700 font-medium shadow-lg\"\n          />\n          <button\n            type=\"submit\"\n            className=\"z-10 absolute bottom-0 right-0 py-1 px-2 rounded-md shadow-md text-white m-2 transition duration-200 hover:scale-125 bg-yellow-500 hover:bg-yellow-600 font-semibold text-sm\"\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              />\n            </svg>\n          </button>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddTodoBar;\n","interface Props {\n  id: string;\n  title: string;\n  description: string;\n  completed: boolean;\n  completedTodo: (id: string) => void;\n  removeTodo: (id: string) => void;\n}\n\nconst TodoItem: React.FC<Props> = ({\n  id,\n  title,\n  description,\n  completed,\n  completedTodo,\n  removeTodo,\n}) => {\n  return (\n    <div\n      className={[\n        \"flex\",\n        \"justify-between\",\n        \"bg-gray-50\",\n        \"rounded-lg\",\n        \"py-2\",\n        \"px-5\",\n        \"my-2\",\n        \"transition\",\n        \"duration-200\",\n        \"hover:scale-105\",\n        \"hover:bg-gray-100\",\n        \"hover:inner-shadow-gray-100\",\n        \"shadow-sm\",\n        completed ? \"opacity-60\" : \"opacity-100\",\n      ].join(\" \")}\n    >\n      <div className=\"flex cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => completedTodo(id)}\n          className=\"h-4 w-4 cursor-pointer mr-2 mt-1\"\n        />\n        <div>\n          <h3\n            className={[\n              completed ? \"line-through\" : \"\",\n              completed ? \"text-gray-400\" : \"text-black\",\n              \"font-bold\",\n              \"text-lg\",\n            ].join(\" \")}\n          >\n            {title}\n          </h3>\n          <p\n            className={[\n              completed ? \"text-gray-300\" : \"text-gray-700\",\n              \"text-xs\",\n            ].join(\" \")}\n          >\n            {description}\n          </p>\n        </div>\n      </div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"h-5 w-5 my-auto cursor-pointer transition duration-200 hover:scale-110\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"#BDBDBD\"\n        onClick={() => removeTodo(id)}\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default TodoItem;\n","import { useState } from \"react\";\nimport AddTodoBar from \"./components/AddTodoBar\";\nimport TodoItem from \"./components/TodoItem\";\n\ninterface Todo {\n  id: string;\n  title: string;\n  description: string;\n  completed: boolean;\n}\n\nconst App: React.FC<{}> = () => {\n  // Todo items\n  const [todos, setTodos] = useState<Array<Todo>>([]);\n\n  // Add a new todo item\n  const addTodo = (title: string, description: string) => {\n    setTodos([\n      ...todos,\n      {\n        id: `todo__${Math.random().toString().substr(2)}`,\n        title,\n        description,\n        completed: false,\n      },\n    ]);\n  };\n\n  // Cross off a todo item\n  const completedTodo = (id: string) => {\n    setTodos((todos) =>\n      todos.map((todo) => {\n        if (todo.id === id) {\n          return { ...todo, completed: !todo.completed };\n        } else return todo;\n      })\n    );\n  };\n\n  // Remove a todo item\n  const removeTodo = (id: string) => {\n    setTodos((todos) => todos.filter((todo) => todo.id !== id));\n  };\n\n  return (\n    <div className=\"w-full sm:w-9/12 lg:w-7/12 mx-auto my-20\">\n      <AddTodoBar\n        addTodo={(title: string, description: string) =>\n          addTodo(title, description)\n        }\n      />\n      <br />\n      {todos.map((todo) => {\n        return (\n          <TodoItem\n            key={todo.id}\n            id={todo.id}\n            title={todo.title}\n            description={todo.description}\n            completed={todo.completed}\n            completedTodo={(id: string) => completedTodo(id)}\n            removeTodo={(id: string) => removeTodo(id)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/apple.ce9fd4bf.svg\";","export default __webpack_public_path__ + \"static/media/battery.908c84d6.svg\";","import AppleLogo from \"../../assets/icons/apple.svg\";\nimport BatteryIcon from \"../../assets/icons/battery.svg\";\n\n// Get current date and time\nconst getDateAndTime = () => {\n  const date = new Date();\n  return `${date.toLocaleTimeString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    day: \"2-digit\",\n    month: \"short\",\n    weekday: \"short\",\n  })}`;\n};\n\nconst Navbar: React.FC<{}> = () => {\n  const menuItems: Array<string> = [\"Edit\", \"View\", \"Window\", \"Help\"];\n\n  return (\n    <nav className=\"flex w-full backdrop-blur-2xl bg-black bg-opacity-20 text-white text-sm font-medium items-center justify-between\">\n      {/* Menu bar */}\n      <div className=\"flex items-centers\">\n        <img\n          src={AppleLogo}\n          alt=\"Apple Logo\"\n          className=\"w-8 h-6 ml-1 -mr-1 cursor-default hover:bg-white hover:bg-opacity-25 py-0.5 rounded-sm\"\n        />\n        <p className=\"px-2 rounded-xm font-bold cursor-default hover:bg-white hover:bg-opacity-25 py-0.5 rounded-sm sm:block hidden\">\n          System Preferences\n        </p>\n        {menuItems.map((item, index) => (\n          <p\n            className=\"px-2 cursor-default hover:bg-white hover:bg-opacity-25 py-0.5 rounded-sm sm:block hidden\"\n            key={index}\n          >\n            {item}\n          </p>\n        ))}\n      </div>\n\n      {/* Icons */}\n      <div className=\"flex items-center\">\n        <div className=\"flex items-center px-2 cursor-default hover:bg-white hover:bg-opacity-25 rounded-sm\">\n          <p className=\"text-xs font-medium\">100%</p>\n          <img src={BatteryIcon} alt=\"Battery Icon\" className=\"w-8 h-6\" />\n        </div>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-8 px-2 cursor-default hover:bg-white hover:bg-opacity-25 py-0.5 rounded-sm\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0\"\n          />\n        </svg>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-8 cursor-default hover:bg-white hover:bg-opacity-25 py-0.5 rounded-sm px-2\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n          />\n        </svg>\n        <div className=\"cursor-default hover:bg-white hover:bg-opacity-25 py-0.5 rounded-sm px-2 mr-1\">\n          {getDateAndTime()}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","const Frame: React.FC<{}> = ({ children }) => {\n  return (\n    <div className=\"bg-gray-100 rounded-lg w-full sm:w-11/12 md:w-9/12 lg:w-7/12 xl:w-1/2 m-auto shadow-lg relative top-20 dark:bg-dark-outerBody dark:border-gray-600 border\">\n      {/* Top bar */}\n      <div className=\"flex items-center dark:bg-dark-title\">\n        <div className=\"flex w-full p-1 items-center\">\n          <div className=\"h-3 w-3 rounded-full bg-red-500 mx-1 text-xs flex items-center justify-center text-red-500 hover:text-black cursor-default font-semibold\">\n            x\n          </div>\n          <div className=\"h-3 w-3 rounded-full bg-yellow-400 mx-1 text-xs flex items-center justify-center text-yellow-400 hover:text-black cursor-default font-semibold\">\n            -\n          </div>\n          <div className=\"h-3 w-3 rounded-full bg-gray-500 mx-1\"></div>\n          <div className=\"flex items-center mx-2 text-black dark:text-gray-100\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-7 w-7 mx-1 hover:bg-gray-300 transfition duration-200 rounded-md p-1\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M15 19l-7-7 7-7\"\n              />\n            </svg>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-7 w-7 mx-1 p-1\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"#BDBDBD\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 5l7 7-7 7\"\n              />\n            </svg>\n          </div>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-7 w-7 hover:bg-gray-300 transfition duration-200 rounded-md p-1 text-gray-500 dark:text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4 6h16M4 12h16M4 18h16\"\n            />\n          </svg>\n          <p className=\"font-bold text-gray-600 text-sm cursor-default mx-1 dark:text-white\">\n            Desktop & Screen Saver\n          </p>\n          <div className=\"flex items-center mr-0.5 rounded-sm justify-end flex-1\">\n            <div className=\"xs:flex items-center rounded-sm py-0.5 px-1 border border-gray-400 dark:border-gray-600 dark:text-gray-500 hidden\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-5 w-5 mr-1\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                />\n              </svg>\n              <input\n                className=\"rounded-r-sm outline-none bg-gray-100 text-xs font-medium dark:bg-dark-title dark:text-white\"\n                placeholder=\"Search\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"flex items-center top-12 justify-center absolute w-full text-xs font-medium cursor-default\">\n        <div className=\"rounded-l-md px-2 bg-white border-l border-t border-b border-gray-300 py-0.5 dark:text-white dark:bg-dark-dropDowns dark:border-gray-600\">\n          Desktop\n        </div>\n        <div className=\"rounded-r-md px-2 bg-gray-200 border-r border-t border-b border-gray-300 py-0.5 dark:text-white dark:bg-dark-innerBody dark:border-gray-600\">\n          Screen Saver\n        </div>\n      </div>\n      <div className=\"rounded-md mx-4 mt-6 p-5 bg-gray-200 dark:bg-dark-innerBody\">\n        {children}\n      </div>\n      <br />\n    </div>\n  );\n};\n\nexport default Frame;\n","const SideBar: React.FC<{}> = () => {\n  return (\n    <div className=\"bg-white w-5/12 text-xs font-medium dark:bg-dark-outerBody dark:text-gray-200\">\n      <div className=\"flex items-center cursor-default\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-4 w-3 mr-1\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"#777777\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={3}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n        Apple\n      </div>\n      <div className=\"ml-4\">\n        <div className=\"flex items-center cursor-default\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mr-1\"\n            fill=\"#008cf7\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#008cf7\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\n            />\n          </svg>\n          Desktop Pictures\n        </div>\n        <div className=\"flex items-center cursor-default\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mr-1\"\n            fill=\"#f7b500\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#f7b500\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\"\n            />\n          </svg>\n          Colors\n        </div>\n      </div>\n      <div className=\"flex items-center cursor-default\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-4 w-3 mr-1\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"#777777\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={3}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n        Photos\n      </div>\n      <div className=\"ml-4\">\n        <div className=\"flex items-center cursor-default\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#777777\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n            />\n          </svg>\n          Favorites\n        </div>\n        <div className=\"flex items-center cursor-default\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#777777\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          People\n        </div>\n        <div className=\"flex items-center cursor-default\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#777777\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M5 19a2 2 0 01-2-2V7a2 2 0 012-2h4l2 2h4a2 2 0 012 2v1M5 19h14a2 2 0 002-2v-5a2 2 0 00-2-2H9a2 2 0 00-2 2v5a2 2 0 01-2 2z\"\n            />\n          </svg>\n          Shared\n        </div>\n        <div className=\"flex items-center cursor-default\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mr-1\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#777777\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"\n            />\n          </svg>\n          Albums\n        </div>\n      </div>\n      <div className=\"flex items-center cursor-default\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-4 w-3 mr-1\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"#777777\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={3}\n            d=\"M19 9l-7 7-7-7\"\n          />\n        </svg>\n        Folders\n      </div>\n      <div className=\"ml-4\">\n        <div className=\"flex items-center cursor-default\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-5 w-5 mr-1\"\n            fill=\"#008cf7\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"#008cf7\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={1}\n              d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"\n            />\n          </svg>\n          Pictures\n        </div>\n      </div>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nexport default SideBar;\n","import Frame from \"./Frame/Frame\";\nimport SideBar from \"./SideBar/SideBar\";\n\ninterface Props {\n  wallpaper: string;\n  wallpapers: Array<string>;\n  onWallpaperChange: (wallpaper: string) => void;\n}\n\nconst SystemPreferences: React.FC<Props> = ({\n  wallpaper,\n  wallpapers,\n  onWallpaperChange,\n}) => {\n  return (\n    <Frame>\n      {/* Wallpaper Preview */}\n      <div className=\"flex items-center\">\n        <img\n          src={wallpaper}\n          alt=\"Wallpaper preview\"\n          className=\"cover h-20 w-32 p-2 border-white border rounded-lg bg-gray-300 dark:bg-dark-innerBody dark:border-gray-600\"\n        />\n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-sm bg-white rounded-md pl-1 pr-0.5 flex items-center shadow-md ml-5 font-medium dark:bg-dark-dropDowns dark:text-white\">\n            <p className=\"w-40\">Fill Screen</p>\n            <div>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-2 w-3 text-white bg-blue-500 rounded-t-sm px-0.5 cursor-default\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={3}\n                  d=\"M5 15l7-7 7 7\"\n                />\n              </svg>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-2 w-3 text-white bg-blue-500 rounded-b-sm px-0.5 cursor-default\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={3}\n                  d=\"M19 9l-7 7-7-7\"\n                />\n              </svg>\n            </div>\n          </div>\n        </div>\n      </div>\n      <br />\n\n      {/* Wallpaper Select */}\n      <div className=\"flex bg-white w-full dark:bg-dark-outerBody\">\n        <SideBar />\n        <div className=\"border border-gray-300 flex flex-wrap justfy-start w-full pt-1 pb-2 pl-1 dark:border-gray-600\">\n          {wallpapers.map((wallpaper, index) => (\n            <img\n              src={wallpaper}\n              alt=\"Wallpaper Thumbnail\"\n              key={index}\n              className=\"cover w-13 h-16 mt-1 mx-1\"\n              onClick={() => onWallpaperChange(wallpaper)}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div className=\"flex mt-2\">\n        <div className=\"flex bg-white text-sm rounded-md shadow-md border border-gray-300 cursor-default dark:bg-dark-title dark:border-gray-600 dark:text-white\">\n          <p className=\"px-2 border-r border-gray-300 dark:border-gray-600\">\n            +\n          </p>\n          <p className=\"px-2\">-</p>\n        </div>\n      </div>\n    </Frame>\n  );\n};\n\nexport default SystemPreferences;\n","export default __webpack_public_path__ + \"static/media/loki.493d0f99.jpg\";","export default __webpack_public_path__ + \"static/media/batman.6737fc34.jpg\";","export default __webpack_public_path__ + \"static/media/interstellar.c6e05e4d.jpg\";","import { useState } from \"react\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport SystemPreferences from \"./components/SystemPreferences/SystemPreferences\";\n\n// Importing all wallpapers\nimport Loki from \"./assets/images/loki.jpg\";\nimport Batman from \"./assets/images/batman.jpg\";\nimport Interstellar from \"./assets/images/interstellar.jpg\";\n\nconst App: React.FC<{}> = () => {\n  // List of all wallpapers\n  const wallpapers = [Loki, Batman, Interstellar];\n\n  // Current wallpaper\n  const [wallpaper, setWallpaper] = useState(wallpapers[0]);\n\n  return (\n    <div\n      className=\"w-screen h-screen bg-cover\"\n      style={{ backgroundImage: `url(${wallpaper})` }}\n    >\n      <Navbar />\n      <SystemPreferences\n        wallpapers={wallpapers}\n        wallpaper={wallpaper}\n        onWallpaperChange={setWallpaper}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import { useState } from \"react\";\n\nimport { CSVLink } from \"react-csv\";\n\ninterface Props {\n  exportData: Array<{\n    name: string;\n    gender: string;\n    dob: string;\n    email: string;\n  }>;\n}\n\nconst ExportDropdown: React.FC<Props> = ({ exportData }) => {\n  // Toggle show/hide dropdown\n  const [showDropdown, setShowDropdown] = useState<boolean>(false);\n\n  return (\n    <div className=\"relative inline-block mx-5\">\n      <button\n        className=\"flex p-2 border-2 border-gray-200 rounded-md shadow-md text-blue-900 bg-white font-bold transform duration-200 hover:scale-105 hover:bg-blue-50\"\n        onClick={() => setShowDropdown((show: boolean) => !show)}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6 mr-1\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"\n          />\n        </svg>\n        Export\n      </button>\n      {showDropdown && (\n        <div className=\"absolute bg-white shadow-md rounded-lg w-36 h-10 flex items-center justify-center hover:bg-blue-100 font-semibold text-gray-500\">\n          <CSVLink data={exportData}>Export as .csv</CSVLink>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExportDropdown;\n","import ExportDropdown from \"./ExportDropdown\";\n\ninterface Props {\n  value: string;\n  onChange: React.ChangeEventHandler<HTMLInputElement> | undefined;\n  exportData: Array<{\n    name: string;\n    gender: string;\n    dob: string;\n    email: string;\n  }>;\n}\n\nconst SearchBar: React.FC<Props> = ({ value, onChange, exportData }) => {\n  return (\n    <div className=\"flex justify-between bg-gray-50 p-2 rounded-2xl mb-5 w-full sticky top-5 z-20\">\n      <div className=\"flex bg-white border-gray-200 rounded-xl shadow-lg px-3 w-full\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-5 w-5 text-blue-900 my-auto mr-2 cursor-pointer\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n          />\n        </svg>\n        <input\n          autoFocus\n          placeholder=\"Search by name, gender, or email\"\n          onChange={onChange}\n          className=\"outline-none text-sm w-full\"\n        />\n      </div>\n      <ExportDropdown exportData={exportData} />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","interface Props {\n  name: string;\n  gender: string;\n  dob: Date;\n  email: string;\n  picture: string;\n  selected: boolean;\n  onClick: () => void;\n}\n\n// Format date to Month (long) date (numeric), year (long) format\nconst getFormattedDate = (date: Date) => {\n  return date.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n};\n\nconst TableItem: React.FC<Props> = ({\n  name,\n  gender,\n  dob,\n  email,\n  picture,\n  selected,\n  onClick,\n}) => {\n  return (\n    <tr\n      onClick={onClick}\n      className={[\n        \"cursor-pointer\",\n        \"transform\",\n        \"duration-200\",\n        selected ? \"hover:bg-green-200\" : \"hover:bg-gray-100\",\n        \"hover:scale-105\",\n        selected ? [\"scale-105\", \"bg-green-100\"].join(\" \") : \"\",\n      ].join(\" \")}\n    >\n      <td className=\"p-2\">\n        <div className=\"flex items-center\">\n          <img\n            src={picture}\n            alt={name}\n            className=\"h-10 w-12 rounded-full py-1 px-2\"\n          />{\" \"}\n          <p>{name}</p>\n        </div>\n      </td>\n      <td className=\"p-2\">{gender}</td>\n      <td className=\"p-2\">{getFormattedDate(dob)}</td>\n      <td className=\"p-2\">{email}</td>\n    </tr>\n  );\n};\n\nexport default TableItem;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport SpotlightSearch from \"./spotlight-search/App\";\nimport FormikTodo from \"./formik-todo/App\";\nimport DarkThemeToggle from \"./darktheme-toggle/App\";\nimport RandomUserTable from \"./randomuserapi-table/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/React-Challenges/\" component={App} />\n        <Route\n          path=\"/React-Challenges/spotlight-search\"\n          component={SpotlightSearch}\n        />\n        <Route path=\"/React-Challenges/formik-todo\" component={FormikTodo} />\n        <Route\n          path=\"/React-Challenges/darktheme-toggle\"\n          component={DarkThemeToggle}\n        />\n        <Route\n          path=\"/React-Challenges/randomuserapi-table\"\n          component={RandomUserTable}\n        />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}